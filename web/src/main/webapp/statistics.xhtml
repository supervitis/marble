<!DOCTYPE html [
    <!ENTITY ldquo  "&#147;"> <!-- Left Double Quote --> 
    <!ENTITY laquo "&#171;"> <!-- left pointing guillemet -->
    <!ENTITY raquo "&#187;"> <!-- right pointing guillemet -->
    <!ENTITY rdquo  "&#148;"> <!-- Right Double Quote -->
    <!ENTITY trade  "&#153;"> <!-- Trademark Symbol (TM) -->
    <!ENTITY rtrade "&#174;"> <!-- Registered Trademark (R) -->
    <!ENTITY copy  "&#169;"> <!-- Copyright Symbol --> 
]>
<ui:composition xmlns:ui="http://xmlns.jcp.org/jsf/facelets" xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:c="http://xmlns.jcp.org/jsp/jstl/core" xmlns:h="http://xmlns.jcp.org/jsf/html"
	template="/WEB-INF/templates/layout.xhtml" xmlns:p="http://primefaces.org/ui"
	xmlns:t="http://xmlns.jcp.org/jsf/passthrough">

	<ui:define name="content">
		<div class="row">
			<div class="col-lg-12">
				<h1 class="page-header">
					Topic Statistics for
					<h:outputText value="#{param['name']}" />
				</h1>
			</div>
			<!-- /.col-lg-12 -->

		</div>

		<ui:param name="currentTopic" value="#{topicMap[param['name']]}" />

		<h:panelGroup rendered="#{empty param['name']}">
			<em class="alert alert-warning">No topic name provided.</em>
		</h:panelGroup>

		<h:panelGroup rendered="#{not empty param['name'] and empty currentTopic}">
			<em class="alert alert-warning">Invalid topic name provided.</em>
		</h:panelGroup>

		<h:panelGroup rendered="#{not empty currentTopic}">
			<div class="row">
				<div class="col-lg-12">
					<div class="panel panel-default">
						<div class="panel-heading">Topic Statistics</div>
						<!-- /.panel-heading -->

						<div class="panel-body">
							<div>
								<h:commandButton id="bogusid" styleClass="btn btn-default" value="Global anatomy"
									onclick="return statistics.getStatistics('global');" type="Submit" />
								<h:commandButton id="bogusid" styleClass="btn btn-default" value="Detailed facts"
									onclick="return statistics.getStatistics('detailed');" type="Submit" />
							</div>
							<div class="statistics">
								<div class="statistics-content" id="statistics-table"></div>
							</div>
							<!-- <hr />
							<div class="statistics statistics-overview">
								<div class="statistics-content" id="statistics-overview"></div>
							</div>-->
						</div>
						<!-- /.panel-body -->

					</div>
					<!-- /.panel -->
				</div>
				<!-- col-lg-12 -->
			</div>
			<!-- /.row -->
		</h:panelGroup>
		<!-- panel group -->
	</ui:define>

	<ui:define name="scripts">
		<h:outputScript type="text/javascript">
            var createGlobalStructure =  (function (data) {
            //<![CDATA[
                html = '<h3>Global Anatomy</h3>';
                html += '<table class="table table-striped table-bordered table-hover" id="detailedTable">';
                html += '<tr><th>Statuses</th><td>'+data.statuses+'</td></tr>';
                html += '<tr><th>Originals</th><td>'+data.originals+'</td></tr>';
                html += '<tr><th>Retweets</th><td>'+data.retweets+'</td></tr>';
                html += '<tr><th>Total Unique Users</th><td>'+data.totalUniqueUsers+'</td></tr>';
                html += '<tr><th>Total Time Zones</th><td>'+data.totalTimeZones+'</td></tr>';
                html += '<tr><th>Top 30 Users</th><td>';
                if (data.uniqueUsers) {
                    html += '<ul>';
                    for (name in data.uniqueUsers) {
                        html += '<li>'+ name + ': '+ data.uniqueUsers[name]+'</li>';
                    }
                    html += '</ul>';
                }
                html += '</td></tr>';
                html += '<tr><th>Time Zones Detailed</th><td>';
                if (data.timeZones) {
                    html += '<ul>';
                    for (name in data.timeZones) {
                        html += '<li>'+ name + ': '+ data.timeZones[name]+'</li>';
                    }
                    html += '</ul>';
                }
                html += '</td></tr>';
                html += '</table>';
               
                               
                return html;
            //]]>
            });
            var createDetailedStructure =  (function (data) {
            //<![CDATA[
                
                html = '<h3>Detailed Facts</h3>';
                html += '<table class="table table-striped table-bordered table-hover" id="detailedTable">';
                html += '<tr>';
                html += '<th>Time</th>';
                html += '<th>Statuses</th>';
                html += '<th>Originals</th>';
                html += '<th>Retweets</th>';
                html += '<th>Positive Statuses</th>';
                html += '<th>Negatives Statuuses</th>';
                html += '<th>Positive - Negative</th>';
                html += '<th>Average Polarity</th>';
                html += '<th>Unique Users</th>';
                html += '<th>Time Zones</th>';
                html += '</tr>';
                
                individualData = data.data;
                for (timestamp in individualData) {
                        var date = new Date(0); // The 0 here is the key, which sets the date to the epoch
                        date.setUTCSeconds(timestamp/1000);
                        html += '<tr>';
                        html += '<td>'+date+'</td>';
                        html += '<td>'+individualData[timestamp].statuses+'</td>';
                        html += '<td>'+individualData[timestamp].originals+'</td>';
                        html += '<td>'+individualData[timestamp].retweets+'</td>';
                        html += '<td>'+individualData[timestamp].positiveStatuses+'</td>';
                        html += '<td>'+individualData[timestamp].negativeStatuses+'</td>';
                        html += '<td>'+individualData[timestamp].positiveMinusNegative+'</td>';
                        html += '<td>'+individualData[timestamp].averagePolarity+'</td>';
                        html += '<td>'+individualData[timestamp].totalUniqueUsers+'</td>';
                        html += '<td>'+individualData[timestamp].totalTimeZones+'</td>';
                        html += '</tr>';
                }    
                html += '</table>';
                 
                return html;
            //]]>
            });
            var statistics = (function() {
			  return {
                getStatistics: function(statsType) {
                    console.log("Getting statistics...");
                    $('#statistics-table').parent().show();
                    //$('#statistics-table').parent().parent().find(".flot-chart-overview").show();
                    //<![CDATA[
                        $('#statistics-table').html("<div class='alert alert-info'><i class='fa fa-spinner fa-spin'></i> Loading the data...</div>");
                    //]]>
                    if (statsType == "global") {
                        $.getJSON( "rest/statistics/topic/global?name=<h:outputText value="#{param['name']}" />&amp;", function( data ) {
                        
	                        var mainTableId = "#statistics-table";
	                        //var overviewChartId = "#statuses-chart-overview";
	                        
	                        $(mainTableId).html(createGlobalStructure(data));
	                        console.log("Statistics data was retrieved and printed.");
	                    });
	                }
	                else if (statsType == "detailed") {
	                   $.getJSON( "rest/statistics/topic/detailed?name=<h:outputText value="#{param['name']}" />&amp;", function( data ) {
                        
                            var mainTableId = "#statistics-table";
                            //var overviewChartId = "#statuses-chart-overview";
                            
                            $(mainTableId).html(createDetailedStructure(data));
                            console.log("Statistics data was retrieved and printed.");
                        });
	                }
	                
                }
                
			  };   
			})();
            $(document).ready(function(){
            });
        </h:outputScript>
	</ui:define>
</ui:composition>
